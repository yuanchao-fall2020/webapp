name: Build & Deploy Webapp

env:
  ARTIFACT_NAME: csye6225-webapp-${{ github.sha }}.zip
  CODEDEPLOY_APPLICATION_NAME: csye6225-webapp
  CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: csye6225-webapp-deployment
  AWS_REGION: us-east-1

on:
  push:
    branckes: [ master ]

jobs:
  ci_cd:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go

      - name: Test
        run: go test -v ./...

      - name: Build
        run: go build -v .

      - name: Build Deployment Artifact
        run: |
          mkdir codedeploy_artifact
          zip -r ${{ env.ARTIFACT_NAME }} codedeploy/*.sh appspec.yml
          pwd
          ls -al
          mv ${{ env.ARTIFACT_NAME }} codedeploy_artifact/
          ls -al
          pwd
          cd codedeploy_artifact/
          pwd
          ls -al
          cd ..
          pwd

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Copy Artifact to S3
        run: |
          aws s3 sync ./codedeploy_artifact s3://${{ secrets.S3_CODEDEPLOY_BUCKET }}

      - name: Codedeploy API Call
          run: |
            output=$(aws deploy create-deployment \
              --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} \
              .....omitted....
              --region us-east-1 \
              --output json)

              echo $output

              dId=$(echo $output | jq -r '.deploymentId')

              aws deploy wait deployment-successful --deployment-id $dId